[{"/Users/corbinmuraro/Desktop/png/src/reportWebVitals.js":"1","/Users/corbinmuraro/Desktop/png/src/App.js":"2","/Users/corbinmuraro/Desktop/png/src/index.js":"3","/Users/corbinmuraro/Desktop/png/src/app.js":"4"},{"size":362,"mtime":1607644888832,"results":"5","hashOfConfig":"6"},{"size":886,"mtime":1607722510183,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607723566777,"results":"8","hashOfConfig":"6"},{"size":1051,"mtime":1607743515679,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j1idmi",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/corbinmuraro/Desktop/png/src/reportWebVitals.js",[],"/Users/corbinmuraro/Desktop/png/src/App.js",["19"],"/Users/corbinmuraro/Desktop/png/src/index.js",[],"/Users/corbinmuraro/Desktop/png/src/app.js",["20","21"],"import React, { useEffect, useState } from \"react\";\nimport { Dropbox } from \"dropbox\";\nimport \"./app.css\";\n\nconst App = () => {\n  const [imageUrls, setImageUrls] = useState([]);\n\n  async function fetchImages() {\n    let dbx = new Dropbox({\n      accessToken:\n        \"mNuFKmh5rh8AAAAAAAAAAbOkVe8Gx_aezrRqg2hybN_DbtLyPTJ5BDRBOJEf9brq\",\n    });\n\n    dbx.sharingGetSharedLinks({ path: \"\" }).then((response) => {\n      const imageUrls = response.result.links.map((image) =>\n        image.url.replace(/([^?]+$)/gi, \"raw=1\")\n      );\n\n      setImageUrls(imageUrls);\n    });\n  }\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <a href=\"https://corbinmuraro.com\">Corbin Muraro</a>\n      </div>\n      <div className=\"main\">\n        {imageUrls.map((url, i) => {\n          return (\n            <a className=\"image\" href={url} target=\"_blank\" key={i}>\n              <img className=\"image\" src={url} key={i} />\n            </a>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n",{"ruleId":"22","severity":1,"message":"23","line":30,"column":16,"nodeType":"24","endLine":30,"endColumn":59},{"ruleId":"25","severity":1,"message":"26","line":35,"column":45,"nodeType":"27","endLine":35,"endColumn":60},{"ruleId":"22","severity":1,"message":"23","line":36,"column":15,"nodeType":"24","endLine":36,"endColumn":58},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]