{"version":3,"sources":["app.js","reportWebVitals.js","index.js"],"names":["App","useState","imageUrls","setImageUrls","a","Dropbox","accessToken","sharingGetSharedLinks","path","then","response","result","links","map","image","url","replace","useEffect","fetchImages","className","href","i","target","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0bA4CeA,G,OAxCH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,iDAGhB,sBAAAC,EAAA,sDACY,IAAIC,UAAQ,CACpBC,YACE,qEAGAC,sBAAsB,CAAEC,KAAM,KAAMC,MAAK,SAACC,GAC5C,IAAMR,EAAYQ,EAASC,OAAOC,MAAMC,KAAI,SAACC,GAAD,OAC1CA,EAAMC,IAAIC,QAAQ,aAAc,YAGlCb,EAAaD,MAXjB,4CAHgB,sBAsBhB,OAJAe,qBAAU,YAlBM,mCAmBdC,KACC,IAGD,qCACE,qBAAKC,UAAU,UAAf,SACE,mBAAGC,KAAK,2BAAR,6BAEF,qBAAKD,UAAU,OAAf,SACGjB,EAAUW,KAAI,SAACE,EAAKM,GACnB,OACE,mBAAGF,UAAU,QAAQC,KAAML,EAAKO,OAAO,SAAvC,SACE,qBAAKH,UAAU,QAAQI,IAAKR,GAAUM,IADaA,aCtBlDG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3134d8e8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dropbox } from \"dropbox\";\nimport \"./app.css\";\n\nconst App = () => {\n  const [imageUrls, setImageUrls] = useState([]);\n\n  async function fetchImages() {\n    let dbx = new Dropbox({\n      accessToken:\n        \"mNuFKmh5rh8AAAAAAAAAAbOkVe8Gx_aezrRqg2hybN_DbtLyPTJ5BDRBOJEf9brq\",\n    });\n\n    dbx.sharingGetSharedLinks({ path: \"\" }).then((response) => {\n      const imageUrls = response.result.links.map((image) =>\n        image.url.replace(/([^?]+$)/gi, \"raw=1\")\n      );\n\n      setImageUrls(imageUrls);\n    });\n  }\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <a href=\"https://corbinmuraro.com\">Corbin Muraro</a>\n      </div>\n      <div className=\"main\">\n        {imageUrls.map((url, i) => {\n          return (\n            <a className=\"image\" href={url} target=\"_blank\" key={i}>\n              <img className=\"image\" src={url} key={i} />\n            </a>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}